#include <net/ip.h>
#include <linux/provenance.h>

#ifndef CONFIG_PROVENANCE_NETWORK_OFF

/* Label option for IP */
struct sockid_opt {
	u8 num;
	u8 len;
	struct host_sockid label;
} __attribute__((packed));

#endif 

#ifdef CONFIG_PROVENANCE_NETWORK_DSA

// daveti: DSA keys
static const char dsa_key_hc_parm_p[DSA_PART_P_HC_LEN] =
"\xfd\x7f\x53\x81\x1d\x75\x12\x29\x52\xdf\x4a\x9c\x2e\xec\xe4\xe7\xf6\x11\xb7\x52\x3c\xef\x44\x00\xc3\x1e\x3f\x80\xb6\x51\x26\x69"
"\x45\x5d\x40\x22\x51\xfb\x59\x3d\x8d\x58\xfa\xbf\xc5\xf5\xba\x30\xf6\xcb\x9b\x55\x6c\xd7\x81\x3b\x80\x1d\x34\x6f\xf2\x66\x60\xb7"
"\x6b\x99\x50\xa5\xa4\x9f\x9f\xe8\x04\x7b\x10\x22\xc2\x4f\xbb\xa9\xd7\xfe\xb7\xc6\x1b\xf8\x3b\x57\xe7\xc6\xa8\xa6\x15\x0f\x04\xfb"
"\x83\xf6\xd3\xc5\x1e\xc3\x02\x35\x54\x13\x5a\x16\x91\x32\xf6\x75\xf3\xae\x2b\x61\xd7\x2a\xef\xf2\x22\x03\x19\x9d\xd1\x48\x01\xc7"
;
static const char dsa_key_hc_parm_q[DSA_PART_Q_HC_LEN] =
"\x97\x60\x50\x8f\x15\x23\x0b\xcc\xb2\x92\xb9\x82\xa2\xeb\x84\x0b\xf0\x58\x1c\xf5"
;
static const char dsa_key_hc_parm_g[DSA_PART_G_HC_LEN] =
"\xf7\xe1\xa0\x85\xd6\x9b\x3d\xde\xcb\xbc\xab\x5c\x36\xb8\x57\xb9\x79\x94\xaf\xbb\xfa\x3a\xea\x82\xf9\x57\x4c\x0b\x3d\x07\x82\x67"
"\x51\x59\x57\x8e\xba\xd4\x59\x4f\xe6\x71\x07\x10\x81\x80\xb4\x49\x16\x71\x23\xe8\x4c\x28\x16\x13\xb7\xcf\x09\x32\x8c\xc8\xa6\xe1"
"\x3c\x16\x7a\x8b\x54\x7c\x8d\x28\xe0\xa3\xae\x1e\x2b\xb3\xa6\x75\x91\x6e\xa3\x7f\x0b\xfa\x21\x35\x62\xf1\xfb\x62\x7a\x01\x24\x3b"
"\xcc\xa4\xf1\xbe\xa8\x51\x90\x89\xa8\x83\xdf\xe1\x5a\xe5\x9f\x06\x92\x8b\x66\x5e\x80\x7b\x55\x25\x64\x01\x4c\x3b\xfe\xcf\x49\x2a"
;
static const char dsa_key_hc_parm_y[DSA_PART_Y_HC_LEN] =
"\xa2\x8a\x43\xb9\x5d\x73\x6b\x5a\x5a\xfe\xb5\xa0\x7d\x2c\x89\x65\xeb\xf3\x52\xa3\xe2\x9b\xa7\xe3\x65\x11\x12\x0c\xcc\xa2\xb7\x60"
"\x51\xcd\xfb\x87\xfd\x9e\xe7\x58\xe5\xb1\x15\x98\x66\x63\x18\x6f\x46\x83\x27\xbf\x5a\xc5\x00\xf1\x89\xcb\x70\x6f\x62\x16\xab\xbc"
"\x4b\xb7\x25\x8f\x92\x15\x06\x06\x5d\xb3\x36\x98\x3c\x31\x26\x7c\xe7\x8c\x94\x27\xfa\xb8\xda\xd0\xc6\x4b\x54\xf1\xef\xf6\x0e\xc6"
"\x01\xdd\x1a\xbc\x25\xd9\x56\x93\x80\x37\x94\xd9\x67\x33\xd5\x65\x69\x93\x1f\x07\xc7\x72\xa5\x13\x23\x83\xac\x6e\xab\xda\xfb\xc4"
;
static const char dsa_key_hc_parm_x[DSA_PART_X_HC_LEN] =
"\x87\xa0\x68\x97\x5e\xf2\x51\xb4\x50\x51\x0d\xee\x08\x73\x41\x19\x5c\xa6\x8c\x16"
;
// daveti: DSA key parameters following (L=1024,N=152) generation
static const char dsa_key_nf_hc_parm_p[DSA_PART_P_NF_HC_LEN] =
"\xf1\xea\x34\xfc\xdc\x50\x43\xb7\xad\xd0\x2d\x87\xe2\xa8\x1d\x0e\x05\xf3\xe6\xe0\x8b\x83\xba\xde\xda\xe7\x74\x5e\xf8\x2e\x8c\x53"
"\xa4\x16\x0a\x6d\x39\x1b\xa5\x92\xf3\xec\x8a\x94\x16\xf9\x5d\x4f\x4c\x78\x3d\x2f\x7d\x9a\x8d\x01\x30\x78\x78\x2f\x67\x29\xef\xc6"
"\xef\x7f\xeb\x0f\x00\x65\xfd\xd4\x53\x43\xa2\xbd\xcb\x02\x58\x1f\x9c\xc1\x7c\x27\x1e\xf4\xb8\xc4\xd1\xd9\xcf\x57\x68\xd6\x34\x79"
"\x8f\x9e\x19\x57\xd8\x3b\x5b\xa0\xc3\x97\xf3\x32\xcc\xca\x0a\x4f\xcd\x60\x8f\x32\x25\xb5\xb2\x65\x85\xd2\xbd\xd6\xf1\x68\x84\xc7"
;
static const char dsa_key_nf_hc_parm_q[DSA_PART_Q_NF_HC_LEN] =
"\xe0\x6c\x09\xdc\x9a\x2a\x3e\xa7\xcf\x31\x97\xcf\x09\xf5\x9d\x0d\xb2\xc2\x99"
;
static const char dsa_key_nf_hc_parm_g[DSA_PART_G_NF_HC_LEN] =
"\x31\x70\x7f\x34\xef\xa1\x05\xb4\xda\x76\xbc\xb9\xbc\x3a\xcb\x13\xab\x9d\x58\xfd\x86\x87\x4f\x66\xe3\xd7\xf4\x83\x3b\x93\x4d\x45"
"\xe4\x74\xcf\xb5\x11\x37\x6d\x6a\xc8\x28\x1b\x1a\x74\xde\x35\x90\xf4\x30\x6e\x5b\x2d\x3e\x4b\x35\xb4\x69\xd4\x64\x2f\x64\xdc\x76"
"\x0f\x4d\x27\xc3\xaf\xcf\xa2\xa8\xd0\xa1\xad\x2f\xc5\x8a\x8b\xd1\x6b\x59\x8d\x26\x24\x7f\xed\x4e\xb9\x15\xc1\xa5\xb6\xe6\x40\xe5"
"\xb0\x6f\xc1\x73\x42\x31\x3c\x1d\x4d\xa0\xe3\xce\x20\x48\x69\x40\xb1\x7d\xbb\x1c\x8e\xa9\xd3\x5a\x80\xc6\xf4\x8a\x89\x6d\xa6\x40"
;
static const char dsa_key_nf_hc_parm_y[DSA_PART_Y_NF_HC_LEN] =
"\xc0\xe3\x73\xc7\x52\x5d\x53\x3c\x39\xc4\x03\x1f\x25\x67\x6f\xd9\x0c\xd1\x7b\xcb\x5d\x5b\x38\xb3\x51\x89\xe8\x11\xe7\xdf\xa1\x07"
"\x50\xa4\x70\x1b\x70\xa2\x1b\xce\xc3\x15\xf0\x6b\xd5\x4c\x7e\xe8\x7d\x09\xed\x42\x90\x8c\x3c\x8b\x4a\xe1\x16\xaf\x1b\x6e\xf1\xf7"
"\x38\xda\xf2\xa1\xe7\x12\xc0\xf4\x2c\x36\x5b\xce\x35\x3c\x30\x49\xf7\xc9\x72\xd3\x1c\xd1\x22\xc0\xd4\x0b\x9b\x48\x11\xcc\x0e\xac"
"\xe9\x31\x33\x18\xd6\x82\xbe\x1f\x77\x2c\x3f\x4a\x45\x24\xff\x7a\xdc\xc0\xe3\x89\xea\x14\xa7\xd3\x2c\xde\xf7\x0e\x0c\x3c\x96\x35"
;
static const char dsa_key_nf_hc_parm_x[DSA_PART_X_NF_HC_LEN] =
"\xb4\x26\x7b\x0b\x9d\x7c\x8b\x61\x58\xc6\x65\xd9\xc6\x9d\xa2\x1c\xa7\xa6\xcb"
;
/*
// daveti: DSA here
// May consider to wrap up all the stuffs here into a struct
static DEFINE_SPINLOCK(lpm_dsa_lock);
static struct dsa_ctx lpm_dsa_ctx;
static int dsa_ctx_inited;
static int dsa_use_non_fips = 1;
static int dsa_debug = 0;
static int dsa_bm_flag = 0;
static int dsa_self_verify = 0;
// daveti: BM macro
#define DSA_BM_SEC_IN_USEC      1000000
#define DSA_BM_SUB_TV(s, e)             \
        ((e.tv_sec*DSA_BM_SEC_IN_USEC+e.tv_usec) - \
        (s.tv_sec*DSA_BM_SEC_IN_USEC+s.tv_usec))
*/
#endif

// Adds a label to the packet in skb.
int provenance_init_ip_options(struct ip_options * opt);
int provenance_label_packet(struct sk_buff *skb);/*, const struct sockid *label);*/
int provenance_detach_packet_label(struct sk_buff *skb);


/***************************************************************
 *
 *  HELPER FUNCTIONS (Used by multiple protocols)
 *
 ***************************************************************/
 u8* find_packet_label_alt(struct ip_options *opts,int debug);
 u8 *find_packet_label(u8 *opts, int len, int debug);
